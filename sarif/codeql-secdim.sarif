{
  "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SecDim",
          "rules": []
        },
        "extensions": [
          {
            "name": "codeql/javascript-queries",
            "semanticVersion": "2.0.3+28f02c07d7d744d761520fbfb354f96827a11f6d",
            "rules": [
              {
                "defaultConfiguration": {
                  "level": "warning"
                },
                "fullDescription": {
                  "text": "Recompiling an already compiled part of the DOM can lead to unexpected behavior of directives, performance problems, and memory leaks."
                },
                "help": {
                  "markdown": "# Double compilation\nThe AngularJS compiler processes (parts of) the DOM, determining which directives match which DOM elements, and then applies the directives to the elements. Each DOM element should only be compiled once, otherwise unexpected behavior may result.\n\n\n## Recommendation\nOnly compile new DOM elements.\n\n\n## Example\nThe following example (adapted from the AngularJS developer guide) shows a directive that adds a tooltip to a DOM element, and then compiles the entire element to apply nested directives.\n\n\n```javascript\nangular.module('myapp')\n       .directive('addToolTip', function($compile) {\n  return {\n    link: function(scope, element, attrs) {\n      var tooltip = angular.element('\u003cspan ng-show=\"showToolTip\"\u003eA tooltip\u003c/span\u003e');\n      tooltip.on('mouseenter mouseleave', function() {\n        scope.$apply('showToolTip = !showToolTip');\n      });\n      element.append(tooltip);\n      $compile(element)(scope); // NOT OK\n    }\n  };\n});\n\n```\nThis is problematic, since it will recompile all of `element`, including parts that have already been compiled.\n\nInstead, only the new element should be compiled:\n\n\n```javascript\nangular.module('myapp')\n       .directive('addToolTip', function($compile) {\n  return {\n    link: function(scope, element, attrs) {\n      var tooltip = angular.element('\u003cspan ng-show=\"showToolTip\"\u003eA tooltip\u003c/span\u003e');\n      tooltip.on('mouseenter mouseleave', function() {\n        scope.$apply('showToolTip = !showToolTip');\n      });\n      element.append(tooltip);\n      $compile(tooltip)(scope); // OK\n    }\n  };\n});\n\n```\n\n## References\n* AngularJS Developer Guide: [Double Compilation, and how to avoid it](https://docs.angularjs.org/guide/compiler#double-compilation-and-how-to-avoid-it).\n* Common Weakness Enumeration: [CWE-1176](https://cwe.mitre.org/data/definitions/1176.html).\n",
                  "text": "# Double compilation\nThe AngularJS compiler processes (parts of) the DOM, determining which directives match which DOM elements, and then applies the directives to the elements. Each DOM element should only be compiled once, otherwise unexpected behavior may result.\n\n\n## Recommendation\nOnly compile new DOM elements.\n\n\n## Example\nThe following example (adapted from the AngularJS developer guide) shows a directive that adds a tooltip to a DOM element, and then compiles the entire element to apply nested directives.\n\n\n```javascript\nangular.module('myapp')\n       .directive('addToolTip', function($compile) {\n  return {\n    link: function(scope, element, attrs) {\n      var tooltip = angular.element('\u003cspan ng-show=\"showToolTip\"\u003eA tooltip\u003c/span\u003e');\n      tooltip.on('mouseenter mouseleave', function() {\n        scope.$apply('showToolTip = !showToolTip');\n      });\n      element.append(tooltip);\n      $compile(element)(scope); // NOT OK\n    }\n  };\n});\n\n```\nThis is problematic, since it will recompile all of `element`, including parts that have already been compiled.\n\nInstead, only the new element should be compiled:\n\n\n```javascript\nangular.module('myapp')\n       .directive('addToolTip', function($compile) {\n  return {\n    link: function(scope, element, attrs) {\n      var tooltip = angular.element('\u003cspan ng-show=\"showToolTip\"\u003eA tooltip\u003c/span\u003e');\n      tooltip.on('mouseenter mouseleave', function() {\n        scope.$apply('showToolTip = !showToolTip');\n      });\n      element.append(tooltip);\n      $compile(tooltip)(scope); // OK\n    }\n  };\n});\n\n```\n\n## References\n* AngularJS Developer Guide: [Double Compilation, and how to avoid it](https://docs.angularjs.org/guide/compiler#double-compilation-and-how-to-avoid-it).\n* Common Weakness Enumeration: [CWE-1176](https://cwe.mitre.org/data/definitions/1176.html).\n"
                },
                "helpUri": "",
                "id": "js/angular/double-compilation",
                "name": "js/angular/double-compilation",
                "properties": {
                  "precision": "very-high",
                  "tags": [
                    "reliability",
                    "frameworks/angularjs",
                    "security",
                    "external/cwe/cwe-1176"
                  ]
                },
                "shortDescription": {
                  "text": "Double compilation - SecDim labs available"
                }
              },
              {
                "defaultConfiguration": {
                  "level": "error"
                },
                "fullDescription": {
                  "text": "Disabling strict contextual escaping (SCE) can cause security vulnerabilities."
                },
                "help": {
                  "markdown": "# Disabling SCE\nAngularJS is secure by default through automated sanitization and filtering of untrusted values that could cause vulnerabilities such as XSS. Strict Contextual Escaping (SCE) is an execution mode in AngularJS that provides this security mechanism.\n\nDisabling SCE in an AngularJS application is strongly discouraged. It is even more discouraged to disable SCE in a library, since it is an application-wide setting.\n\n\n## Recommendation\nDo not disable SCE.\n\n\n## Example\nThe following example shows an AngularJS application that disables SCE in order to dynamically construct an HTML fragment, which is later inserted into the DOM through `$scope.html`.\n\n\n```javascript\nangular.module('app', [])\n    .config(function($sceProvider) {\n        $sceProvider.enabled(false); // BAD\n    }).controller('controller', function($scope) {\n        // ...\n        $scope.html = '\u003cul\u003e\u003cli\u003e' + item.toString() + '\u003c/li\u003e\u003c/ul\u003e';\n    });\n\n```\nThis is problematic, since it disables SCE for the entire AngularJS application.\n\nInstead, just mark the dynamically constructed HTML fragment as safe using `$sce.trustAsHtml`, before assigning it to `$scope.html`:\n\n\n```javascript\nangular.module('app', [])\n    .controller('controller', function($scope, $sce) {\n        // ...\n        // GOOD (but should use the templating system instead)\n        $scope.html = $sce.trustAsHtml('\u003cul\u003e\u003cli\u003e' + item.toString() + '\u003c/li\u003e\u003c/ul\u003e'); \n    });\n\n```\nPlease note that this example is for illustrative purposes only; use the AngularJS templating system to dynamically construct HTML when possible.\n\n\n## References\n* AngularJS Developer Guide: [Strict Contextual Escaping](https://docs.angularjs.org/api/ng/service/$sce)\n* AngularJS Developer Guide: [Can I disable SCE completely?](https://docs.angularjs.org/api/ng/service/$sce#can-i-disable-sce-completely-).\n* Common Weakness Enumeration: [CWE-116](https://cwe.mitre.org/data/definitions/116.html).\n\n\n## SecDim Labs\nExplore and debug the Cross Site Scripting vulnerability on [SecDim](https://play.secdim.com/browse/?search=116)\n",
                  "text": "# Disabling SCE\nAngularJS is secure by default through automated sanitization and filtering of untrusted values that could cause vulnerabilities such as XSS. Strict Contextual Escaping (SCE) is an execution mode in AngularJS that provides this security mechanism.\n\nDisabling SCE in an AngularJS application is strongly discouraged. It is even more discouraged to disable SCE in a library, since it is an application-wide setting.\n\n\n## Recommendation\nDo not disable SCE.\n\n\n## Example\nThe following example shows an AngularJS application that disables SCE in order to dynamically construct an HTML fragment, which is later inserted into the DOM through `$scope.html`.\n\n\n```javascript\nangular.module('app', [])\n    .config(function($sceProvider) {\n        $sceProvider.enabled(false); // BAD\n    }).controller('controller', function($scope) {\n        // ...\n        $scope.html = '\u003cul\u003e\u003cli\u003e' + item.toString() + '\u003c/li\u003e\u003c/ul\u003e';\n    });\n\n```\nThis is problematic, since it disables SCE for the entire AngularJS application.\n\nInstead, just mark the dynamically constructed HTML fragment as safe using `$sce.trustAsHtml`, before assigning it to `$scope.html`:\n\n\n```javascript\nangular.module('app', [])\n    .controller('controller', function($scope, $sce) {\n        // ...\n        // GOOD (but should use the templating system instead)\n        $scope.html = $sce.trustAsHtml('\u003cul\u003e\u003cli\u003e' + item.toString() + '\u003c/li\u003e\u003c/ul\u003e'); \n    });\n\n```\nPlease note that this example is for illustrative purposes only; use the AngularJS templating system to dynamically construct HTML when possible.\n\n\n## References\n* AngularJS Developer Guide: [Strict Contextual Escaping](https://docs.angularjs.org/api/ng/service/$sce)\n* AngularJS Developer Guide: [Can I disable SCE completely?](https://docs.angularjs.org/api/ng/service/$sce#can-i-disable-sce-completely-).\n* Common Weakness Enumeration: [CWE-116](https://cwe.mitre.org/data/definitions/116.html).\n\n\n## SecDim Labs\nExplore and debug the Cross Site Scripting vulnerability on [SecDim](https://play.secdim.com/browse/?search=116)\n"
                },
                "helpUri": "",
                "id": "js/angular/disabling-sce",
                "name": "js/angular/disabling-sce",
                "properties": {
                  "precision": "very-high",
                  "tags": [
                    "security",
                    "maintainability",
                    "frameworks/angularjs",
                    "external/cwe/cwe-116"
                  ]
                },
                "shortDescription": {
                  "text": "SecDim: Cross Site Scripting"
                }
              },
              {
                "defaultConfiguration": {
                  "level": "warning"
                },
                "fullDescription": {
                  "text": "Specifying the same attribute twice on the same HTML element is redundant and may indicate a copy-paste mistake."
                },
                "help": {
                  "markdown": "# Duplicate HTML element attributes\nAccording to the HTML5 standard, an HTML element must not have two or more attributes with the same name. If the attribute values are the same, this is most likely harmless, but it may indicate a copy-paste mistake.\n\n\n## Recommendation\nInspect the element in question and delete all but one of the redundant attributes.\n\n\n## Example\nThe following HTML snippet contains an anchor element with a redundant `href` attribute:\n\n\n```html\n\u003ca href=\"https://semmle.com\" href=\"https://semmle.com\"\u003eSemmle\u003c/a\u003e\n```\nThe redundancy can be resolved by deleting one of the attributes:\n\n\n```html\n\u003ca href=\"https://semmle.com\"\u003eSemmle\u003c/a\u003e\n```\n\n## References\n* HTML5 Standard: [8.1.2.3 Attributes](https://www.w3.org/TR/html5/syntax.html#attributes-0).\n",
                  "text": "# Duplicate HTML element attributes\nAccording to the HTML5 standard, an HTML element must not have two or more attributes with the same name. If the attribute values are the same, this is most likely harmless, but it may indicate a copy-paste mistake.\n\n\n## Recommendation\nInspect the element in question and delete all but one of the redundant attributes.\n\n\n## Example\nThe following HTML snippet contains an anchor element with a redundant `href` attribute:\n\n\n```html\n\u003ca href=\"https://semmle.com\" href=\"https://semmle.com\"\u003eSemmle\u003c/a\u003e\n```\nThe redundancy can be resolved by deleting one of the attributes:\n\n\n```html\n\u003ca href=\"https://semmle.com\"\u003eSemmle\u003c/a\u003e\n```\n\n## References\n* HTML5 Standard: [8.1.2.3 Attributes](https://www.w3.org/TR/html5/syntax.html#attributes-0).\n"
                },
                "helpUri": "",
                "id": "js/duplicate-html-attribute",
                "name": "js/duplicate-html-attribute",
                "properties": {
                  "precision": "very-high",
                  "tags": [
                    "quality",
                    "maintainability",
                    "readability"
                  ]
                },
                "shortDescription": {
                  "text": "Duplicate HTML element attributes"
                }
              }
            ]
          },
          {
            "name": "codeql/javascript-all",
            "semanticVersion": "2.6.10+28f02c07d7d744d761520fbfb354f96827a11f6c"
          },
          {
            "name": "codeql/threat-models",
            "semanticVersion": "1.0.30+28f02c07d7d744d761520fbfb354f96827a11f6c"
          }
        ]
      },
      "artifacts": [
        {
          "location": {
            "uri": "index.html",
            "uriBaseId": "%SRCROOT%",
            "index": 0
          }
        },
        {
          "location": {
            "uri": "public/index.html",
            "uriBaseId": "%SRCROOT%",
            "index": 1
          }
        },
        {
          "location": {
            "uri": "controllers/passphrase.js",
            "uriBaseId": "%SRCROOT%",
            "index": 2
          }
        },
        {
          "location": {
            "uri": "controllers/notebook.js",
            "uriBaseId": "%SRCROOT%",
            "index": 3
          }
        },
        {
          "location": {
            "uri": "app.js",
            "uriBaseId": "%SRCROOT%",
            "index": 4
          }
        },
        {
          "location": {
            "uri": "controllers/users.js",
            "uriBaseId": "%SRCROOT%",
            "index": 5
          }
        },
        {
          "location": {
            "uri": "public/home.html",
            "uriBaseId": "%SRCROOT%",
            "index": 6
          }
        },
        {
          "location": {
            "uri": "public/static/receiver.js",
            "uriBaseId": "%SRCROOT%",
            "index": 7
          }
        },
        {
          "location": {
            "uri": "controllers/storage.js",
            "uriBaseId": "%SRCROOT%",
            "index": 8
          }
        },
        {
          "location": {
            "uri": "public/static/userdisplay.js",
            "uriBaseId": "%SRCROOT%",
            "index": 9
          }
        },
        {
          "location": {
            "uri": "routes/passphrase.js",
            "uriBaseId": "%SRCROOT%",
            "index": 10
          }
        },
        {
          "location": {
            "uri": "utils.js",
            "uriBaseId": "%SRCROOT%",
            "index": 11
          }
        },
        {
          "location": {
            "uri": "routes/storage.js",
            "uriBaseId": "%SRCROOT%",
            "index": 12
          }
        },
        {
          "location": {
            "uri": "routes/notebook.js",
            "uriBaseId": "%SRCROOT%",
            "index": 13
          }
        },
        {
          "location": {
            "uri": "routes/users.js",
            "uriBaseId": "%SRCROOT%",
            "index": 14
          }
        },
        {
          "location": {
            "uri": "soapserver/dvwsuserservice.js",
            "uriBaseId": "%SRCROOT%",
            "index": 15
          }
        },
        {
          "location": {
            "uri": ".github/workflows/security-analysis.yml",
            "uriBaseId": "%SRCROOT%",
            "index": 16
          }
        },
        {
          "location": {
            "uri": ".gitpod.yml",
            "uriBaseId": "%SRCROOT%",
            "index": 17
          }
        },
        {
          "location": {
            "uri": "docker-compose.yml",
            "uriBaseId": "%SRCROOT%",
            "index": 18
          }
        },
        {
          "location": {
            "uri": "graphql/schema.js",
            "uriBaseId": "%SRCROOT%",
            "index": 19
          }
        },
        {
          "location": {
            "uri": "models/db.js",
            "uriBaseId": "%SRCROOT%",
            "index": 20
          }
        },
        {
          "location": {
            "uri": "models/notebook.js",
            "uriBaseId": "%SRCROOT%",
            "index": 21
          }
        },
        {
          "location": {
            "uri": "models/passphrase.js",
            "uriBaseId": "%SRCROOT%",
            "index": 22
          }
        },
        {
          "location": {
            "uri": "models/users.js",
            "uriBaseId": "%SRCROOT%",
            "index": 23
          }
        },
        {
          "location": {
            "uri": "package.json",
            "uriBaseId": "%SRCROOT%",
            "index": 24
          }
        },
        {
          "location": {
            "uri": "public/admin.html",
            "uriBaseId": "%SRCROOT%",
            "index": 25
          }
        },
        {
          "location": {
            "uri": "public/error.html",
            "uriBaseId": "%SRCROOT%",
            "index": 26
          }
        },
        {
          "location": {
            "uri": "public/notes.html",
            "uriBaseId": "%SRCROOT%",
            "index": 27
          }
        },
        {
          "location": {
            "uri": "public/passgen.js",
            "uriBaseId": "%SRCROOT%",
            "index": 28
          }
        },
        {
          "location": {
            "uri": "public/passphrasegen.html",
            "uriBaseId": "%SRCROOT%",
            "index": 29
          }
        },
        {
          "location": {
            "uri": "public/receiver.html",
            "uriBaseId": "%SRCROOT%",
            "index": 30
          }
        },
        {
          "location": {
            "uri": "public/search.html",
            "uriBaseId": "%SRCROOT%",
            "index": 31
          }
        },
        {
          "location": {
            "uri": "public/static/angular.js",
            "uriBaseId": "%SRCROOT%",
            "index": 32
          }
        },
        {
          "location": {
            "uri": "public/upload.html",
            "uriBaseId": "%SRCROOT%",
            "index": 33
          }
        },
        {
          "location": {
            "uri": "routes/index.js",
            "uriBaseId": "%SRCROOT%",
            "index": 34
          }
        },
        {
          "location": {
            "uri": "rpc_server.js",
            "uriBaseId": "%SRCROOT%",
            "index": 35
          }
        },
        {
          "location": {
            "uri": "startup_script.js",
            "uriBaseId": "%SRCROOT%",
            "index": 36
          }
        },
        {
          "location": {
            "uri": "swagger.js",
            "uriBaseId": "%SRCROOT%",
            "index": 37
          }
        },
        {
          "location": {
            "uri": "test/dvws.test.js",
            "uriBaseId": "%SRCROOT%",
            "index": 38
          }
        }
      ],
      "results": [],
      "properties": {
        "semmle.formatSpecifier": "sarif-latest"
      },
      "invocations": [
        {
          "executionSuccessful": true
        }
      ]
    }
  ]
}
